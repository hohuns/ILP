{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Documents/github/InterLogger Version2_Private/src/components/LogInForm/DialogLanLogin.js\";\n\n/* eslint-disable react/react-in-jsx-scope */\nimport { useCallback, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-enterprise\";\nimport \"@inovua/reactdatagrid-enterprise/index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersActions } from \"../../store/userSlice\";\nconst gridStyle = {\n  minHeight: 120\n};\nconst columns = [{\n  name: \"lan\",\n  header: \"Language\",\n  defaultFlex: 1,\n  type: \"string\"\n}, {\n  name: \"id\",\n  header: \"Id\",\n  type: \"number\",\n  defaultVisible: false\n}];\nconst dataSource = [{\n  id: 1,\n  lan: \"English\"\n}, {\n  id: 2,\n  lan: \"한국어\"\n}]; // eslint-disable-next-line arrow-body-style\n\nconst DialogLanLogin = _ref => {\n  let {\n    open,\n    close\n  } = _ref;\n  const [selected, setSelected] = useState({});\n  const [selectedObject, setSelectedObject] = useState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    close();\n  };\n\n  const filtertObject = async () => {\n    dataSource.filter(d => d.id === selected).map(d => setSelectedObject(d));\n  };\n\n  const selectHandler = async () => {\n    const lan = selectedObject.lan;\n    dispatch(usersActions.updateLanguage(lan));\n    localStorage.setItem(\"mode\", user.mode);\n  };\n\n  useEffect(() => {\n    filtertObject();\n  }, [selected]); // eslint-disable-next-line no-shadow\n\n  const onSelectionChange = useCallback(_ref2 => {\n    let {\n      selected\n    } = _ref2;\n    setSelected(selected);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: close,\n    fullWidth: true,\n    disableEscapeKeyDown: true,\n    onBackdropClick: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Language Selection / \\uC5B8\\uC5B4 \\uC120\\uD0DD\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Please Select the Site. / \\uC5B8\\uC5B4\\uB97C \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694.\", /*#__PURE__*/React.createElement(Box, {\n    variant: \"div\",\n    sx: {\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ReactDataGrid, {\n    idProperty: \"id\",\n    checkboxColumn: true,\n    selected: selected,\n    multiSelect: false,\n    onSelectionChange: onSelectionChange,\n    style: gridStyle,\n    columns: columns,\n    dataSource: dataSource,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: selectHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Select\"))));\n};\n\nexport default DialogLanLogin;","map":{"version":3,"sources":["/Users/sungjaejoo/Documents/github/InterLogger Version2_Private/src/components/LogInForm/DialogLanLogin.js"],"names":["useCallback","useEffect","useState","React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","Typography","Box","ReactDataGrid","useDispatch","useSelector","usersActions","gridStyle","minHeight","columns","name","header","defaultFlex","type","defaultVisible","dataSource","id","lan","DialogLanLogin","open","close","selected","setSelected","selectedObject","setSelectedObject","dispatch","handleClose","filtertObject","filter","d","map","selectHandler","updateLanguage","localStorage","setItem","user","mode","onSelectionChange","padding"],"mappings":"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","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\nimport { useCallback, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-enterprise\";\nimport \"@inovua/reactdatagrid-enterprise/index.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersActions } from \"../../store/userSlice\";\n\nconst gridStyle = { minHeight: 120 };\n\nconst columns = [\n  {\n    name: \"lan\",\n    header: \"Language\",\n    defaultFlex: 1,\n    type: \"string\",\n  },\n  { name: \"id\", header: \"Id\", type: \"number\", defaultVisible: false },\n];\n\nconst dataSource = [\n  { id: 1, lan: \"English\" },\n  { id: 2, lan: \"한국어\" },\n];\n\n// eslint-disable-next-line arrow-body-style\nconst DialogLanLogin = ({ open, close }) => {\n  const [selected, setSelected] = useState({});\n  const [selectedObject, setSelectedObject] = useState();\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    close();\n  };\n\n  const filtertObject = async () => {\n    dataSource\n      .filter((d) => d.id === selected)\n      .map((d) => setSelectedObject(d));\n  };\n\n  const selectHandler = async () => {\n    const lan = selectedObject.lan;\n    dispatch(usersActions.updateLanguage(lan));\n    localStorage.setItem(\"mode\", user.mode);\n  };\n\n  useEffect(() => {\n    filtertObject();\n  }, [selected]);\n\n  // eslint-disable-next-line no-shadow\n  const onSelectionChange = useCallback(({ selected }) => {\n    setSelected(selected);\n  }, []);\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={close}\n        fullWidth={true}\n        disableEscapeKeyDown={true}\n        onBackdropClick=\"false\"\n      >\n        <DialogTitle>Language Selection / 언어 선택</DialogTitle>\n        <DialogContent>\n          <DialogContentText align=\"left\">\n            Please Select the Site. / 언어를 선택해 주세요.\n            <Box variant=\"div\" sx={{ padding: \"20px\" }}>\n              <form>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <ReactDataGrid\n                      idProperty=\"id\"\n                      checkboxColumn\n                      selected={selected}\n                      multiSelect={false}\n                      onSelectionChange={onSelectionChange}\n                      style={gridStyle}\n                      columns={columns}\n                      dataSource={dataSource}\n                    />\n                  </Grid>\n                </Grid>\n              </form>\n            </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={selectHandler}>Select</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DialogLanLogin;\n"]},"metadata":{},"sourceType":"module"}